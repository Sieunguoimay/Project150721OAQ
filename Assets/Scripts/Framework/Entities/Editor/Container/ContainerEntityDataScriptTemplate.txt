using Framework.Entities;
using UnityEngine;
using System;
using Framework.Entities.ContainerEntity;

namespace #NAMESPACE#
{
    public interface I#SCRIPTNAME#Data : IContainerEntityData
    {
    }

    public interface I#SCRIPTNAME#SavedData : IContainerEntitySavedData
    {
    }

    [CreateAssetMenu(menuName = "Entity/#SCRIPTNAME#Data")]
    public class #SCRIPTNAME#Data : ContainerEntityData<I#SCRIPTNAME#>, I#SCRIPTNAME#Data
    {
        protected override IEntity<IEntityData, IEntitySavedData> CreateContainerEntityInternal(IEntity<IEntityData, IEntitySavedData>[] components, IEntitySavedData[] savedDataItems)
        {
            return new #SCRIPTNAME#(this, new #SCRIPTNAME#SavedData(this, savedDataItems), components);
        }
    }

    [Serializable]
    public class #SCRIPTNAME#SavedData : ContainerEntitySavedData<I#SCRIPTNAME#Data>, I#SCRIPTNAME#SavedData
    {
        public #SCRIPTNAME#SavedData(I#SCRIPTNAME#Data data, IEntitySavedData[] componentSavedDataItems) : base(data, componentSavedDataItems)
        {
        }
    }
}